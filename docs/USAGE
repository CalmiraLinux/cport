        Руководство пользователя cpkg. Работа с пакетным менеджером.
      
В данной инструкции пойдёт речь о работе с пакетным менеджером cpkg.



ЧАСТЬ 1. Основные функции.
==========================

К основным функциям относятся установка, удаление и просмотр информации о
пакете.

1.1. Установка пакета.
Для того, чтобы установить пакет, нужно ввести:

	cpkg install $PACKAGE_NAME
	
Для удобства вы можете заменить опцию install на ключ -i.


1.2. Удаление пакета.
Для того, чтобы удалить пакет, введите:

	cpkg remove $PACKAGE

Для удобства вы можете заменить опцию remove на ключ -r.
И тут важная деталь - в случае установки вы вводите название архива, в котором
находится пакет, а для удаления вам нужно ввести название пакета. Чаще всего,
название архива с пакетом носит название по такой схеме:

	'Название_пакета-версия_пакета' (без кавычек)
	
С расширением *.txz. Например:

	cpkg-1.0b1.txz
	
Название пакета же:

	cpkg

Так же запомните то, что cpkg НЕ ОБРАБАТЫВАЕТ зависимости. Да, он может выводить
список зависимостей пакета, но ставить или удалять вы должны вручную.


1.3. Просмотр информации о пакете.
Для того, чтобы узнать имя, версию, сборщика пакета и другие сведенья,
воспользуйтесь командой info:

	cpkg info $PACKAGE
	
Она показывает базовую информацию о пакете, включая файлы, которые он
предоставляет, и его зависимости. Отображение зависимостей пакета было введено для
упрощения управления установленным ПО.



ЧАСТЬ 2. Дополнительные функции.
================================
Помимо основных функций, cpkg умеет скачивать пакеты (алгоритм скачивания пока
очень кривой), обновлять список пакетов (для скачивания), делать локальный
репозиторий, очищать кеш (в т.ч. каталог с исходными текстами /usr/src).


2.1. Обновление списка пакетов.
В списке пакетов содержатся ссылки на пакеты в репозиториях ПО. Это нужно для их
скачивания (cpkg с версии 1.0pa4 умеет скачивать пакеты со своего репозитория).

Пакеты в репозиториях пополняются, и список пакетов нередко становится
неактуальным. Для того, чтобы его обновить, выполните:

	cpkg update

Этим вы удалите старый pkg.list и загрузите новый.


2.2. Скачивание пакетов.
Мы вам НЕ РЕКОМЕНДУЕМ использовать эту функцию, так как она очень нестабильна и
очень часто скачивает абсолютно другой пакет, а в некоторых случаях может
"взбеситься" и скачать абсолютно всё, что увидела в pkg.list. Однако, если вы
всё-таки решили использовать эту функцию, выполните:

	cpkg download $PACKAGE_NAME
	
Имя пакета должно включать в себя само название + расширение txz.


2.3. Очистка кеша cpkg.
Во время работы cpkg активно использует кеш. В некоторых случаях он может
занимать очень много места. Для очистки выполните:

	cpkg clean $OPTION
	
Замените $OPTION на нужную вам опцию. Их всего три:

	cache  - очистка кеша (/var/cache/cpkg/archives/*)
	source - очистка дерева исходных кодов (/usr/src/*)
	log    - очистка логов (/var/log/cpkg/*)


2.4. Создание локального репозитория.
В некоторых случаях пользователю может потребоваться создание локального
репозитория. Для этого выполните:

	cpkg local_repo
	
Будет склонирован репозиторий в директорию /var/cache/cpkg/localrepo. В нём
содержатся пакеты для всех версий системы.


2.5. Просмотр справки.
Для просмотра этой справки используйте:

	cpkg help
	


ЧАСТЬ 3. Технические детали.
============================
В данном разделе приведены сведенья о строении работы cpkg.

3.1. Установка пакетов.
Пакет указывается cpkg как опция $2. После чего ПМ ищет его в файловой системе,
если находит, то копирует в /var/cache/cpkg/archives и распаковывает его.
Тестирует все нужные директории на наличие, если всё впорядке - то приступает к
установке.

В процедуре установки несколько подпроцедур:

 * тестирование пакета на наличие его метаданных с описанием;
 * выполнение preinstall-скриптов;
 * тестирование на соответствие текущей ахритектуре;
 * вывод списка зависимостей;
 * настройка postinstall-скриптов;
 * если это port-пакет, то выполнение инструкций по сборке пакета из исходного
кода;
 * копирование данных пакета в корень;
 * добавление пакета в базу данных;
 * выполнение postinstall-скриптов;

По умолчанию пакет распаковывается в / файловой системы. Если вы хотите изменить
это поведение, например, чтобы пакет копировался в /opt, то экспортируйте
переменную INSTALL_ROOT, значение которой - директория, в которую должен быть
скопирован пакет. Например:

	export INSTALL_ROOT="/opt"
	cpkg install $PKG
	unset INSTALL_ROOT
	
Тогда в директории $INSTALL_ROOT будет создана зеркальная копия корня (/).

ПРЕДУПРЕЖДЕНИЕ. Не все пакеты будут корректно работать, если их установить в
другую директорию!


3.2. Удаление пакета.
Пакет указывается cpkg как опция $2. После чего ПМ ищет его в базе данных (
используется своя функция для поиска, а не отдельная, использующаяся в процедуре
install_pkg для установки пакета). В случае наличия, подключает метаданные и
выполняет следующие процедуры:

 * проверяет приоритет пакета, если он системный, то удаление прекращается, если
пакет пользовательский, то удаление разрешается;
 * выводится список зависимостей (в т.ч. конфликтов);
 * удаляются все файлы, указанные в метаданных пакета;
 * отключаются метаданные и удаляется пакет из базы данных cpkg;


3.3. Просмотр информации о пакете.
Пакет указывается cpkg в качестве параметра $2. После чего ПМ ищет его в базе
данных (используется функция, аналогичная той, что используется в функции
remove_pkg для удаления пакета). Если пакет найден в базе данных, то
подключаются его метаданные. После чего выводится следующая информация:

 * имя пакета;
 * описание пакета;
 * сборщик пакета;
 * файлы пакета;
 
Ниже выводится список зависимостей и другая дополнительная информация.
